%h1 Lesson 021 [ Rails Scaffold Part 2 ]

%h2 Dependent

%p
  This lesson depends on
  %a(href='/lessons/lesson020') Lesson 020 [ Rails Scaffold Part 1 ]

%p
  I started this lesson by reviewing my steps in Lesson 020:


%h2 I Enhanced Linux:

.syntax
  %pre
    =render 'lesson018a'

%h2 I created "ron" account and logged into ron account:

.syntax
  %pre
    %code
      sudo useradd -m -s /bin/bash -G sudo ron
      sudo passwd ron
      ssh ron@localhost
%h2 I enhanced the ron account:

.syntax
  %pre
    %code /usr/bin/curl -L rails4.us/sue/.bashrc    > ~/.bashrc
    %code /usr/bin/curl -L rails4.us/sue/.emacs     > ~/.emacs
    %code /usr/bin/curl -L rails4.us/sue/.gemrc     > ~/.gemrc
    %code /usr/bin/curl -L rails4.us/sue/.gitconfig > ~/.gitconfig

%h2 I installed Ruby:

.syntax
  %pre
    %code
      whoami
      cd ~ron
      git clone https://github.com/rbenv/rbenv      .rbenv
      git clone https://github.com/rbenv/ruby-build .rbenv/plugins/ruby-build
      bash
      rbenv install 2.6.0
      rbenv global  2.6.0
      gem install rails -v 5.2.2

%h2 I created a new Rails app:

.syntax
  %pre
    =render 'lesson020rnew'

%h2 I created "scaffolds":

.syntax
  %pre
    %code
      cd ~ron/petz1
      rails generate scaffold Owner name:string phone:string email:string location:string
      rails generate scaffold Pet name:string pettype:string age:integer owner:belongs_to

%h2 I create tables:

.syntax
  %pre
    %code rails db:migrate
    
%h2 I started "rails console":

.syntax
  %pre
    %code rails console

%h2 I created an owner-object named: rob_grey:

.syntax
  %pre
    %code rob_grey = Owner.create :name => 'Rob Grey',
    %code :phone => '650-253-0000', 
    %code :email => 'rob@grey100.edu', 
    %code :location => 'Tahoe'

%h2 I created a pet-object named: roger:

.syntax
  %pre
    %code roger = Pet.create :name => 'Roger', :pettype => 'Dog', :age => 6, :owner => rob_grey
    
%h2 I enhanced owner.rb:

.syntax
  %pre
    %code
      sed -i '2s/end/  has_many :pets/ ; 2a end' app/models/owner.rb
      cat app/models/owner.rb

%h2 I started rails console:

.syntax
  %pre
    %code rails console

%h2 I called Owner.find_by_phone()

.syntax
  %pre
    %code rob_grey = Owner.find_by_phone '650-253-0000'

%h2 I asked rob_grey to adopt a cat named: "Rebel".

.syntax
  %pre
    %code
      Pet.create :name => 'Rebel', :pettype => 'Cat', :age => 1, :owner => rob_grey

%h2 I asked rob_grey to list the names of his pets:

.syntax
  %pre
    %code
      rob_grey.pets[0].name # Roger
      rob_grey.pets[1].name # Rebel
      rob_grey.pets[2].name # should fail

%p All of the above content is a quick review of Lesson 020.

%h2 webserver.bash

%p After I studied Lesson 020 and understood I was ready for Lesson 021, I created a Bash script to start the Rails webserver.

%p To start work on the script I verified I was logged into Linux as ron:

.syntax
  %pre
    %code whoami

%p I created a folder named: ~ron/petz1/script

.syntax
  %pre
    %code mkdir ~ron/petz1/script

%p I used Bash-echo commands to create a script named: webserver.bash

.syntax
  %pre
    %code
      cd ~ron/petz1/script
      echo rails server -b 0.0.0.0 -p 3910 > webserver.bash
      chmod u+x webserver.bash

%p I used webserver.bash to start the webserver:

.syntax
  %pre
    %code
      cd ~ron/petz1
      script/webserver.bash

%p I used my browser to visit the local webserver:

%p http://localhost:3910

%p I saw this:

%img(src='/lesson021/yay3910.png')
%hr/

%h2 rails routes

%p Rails supports an idea called "routes".

%p A simple way to understand a route is to discuss the "/pets" route.

%p In Lesson 020, when I created the Pet scaffold, I saw it create some things:

%ul
  %li Pet model
  %li pets table
  %li "pet belongs_to :owner" Association

%p In addition, I had created some routes.

%p One of the routes is the "/pets" route which is a somewhat complicated thing.

%p To simplify the "/pets" route, I say that it is string which the browser will accept and then pass to the Rails webserver as a "GET-request".

%p The "GET-request" will pass through several layers of Rails software.

%p Rails will transform the request into a response.

%p As Rails builds the response, Rails will use ERB, which we studied in Lesson 011, to attach some HTML to the response.

%p Eventually, Rails will finish building the response and hand it to the webserver.

%p The webserver might enhance it a little bit and send the response to the browser as a stream of:

%ul
  %li HTML
  %li CSS
  %li JavaScript
  %li "Headers"

%p The browser will receive it and render it into a human readable page.

%p To help you understand this a little more, I typed the "/pets" route into my browser as this string:

%p http://localhost:3910/pets

%p After I pressed the enter key, the browser sent a request to Rails.

%p Rails responded, and the browser rendered the response.

%p I saw this:

%img(src='/lesson021/pets1.png')
%hr/

%h1#hw Homework

%ul
  %li Does Lesson 021 depend on Lesson 020?
  
%hr/

%a(href='/lessons/lesson019') Lesson020
